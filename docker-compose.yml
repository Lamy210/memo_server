version: '3.8'

services:
  frontend:
    build:
      context: ./docker/frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend:8080
    networks:
      - memo-network
    tty: true
    stdin_open: true
    entrypoint: ["/bin/bash"]
    command: ["-c", "tail -f /dev/null"]  # コンテナを起動状態に保つ
    
  backend:
    build:
      context: ./docker/backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - backend_cache:/app/target
      - cargo_registry:/usr/local/cargo/registry
    ports:
      - "8083:8080"
    environment:
      - RUST_LOG=debug
      - DATABASE_URL=scylla://scylla:9042/memo_app
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - memo-network
    tty: true
    stdin_open: true
    command: /bin/bash

  scylla:
    image: scylladb/scylla:5.2
    ports:
      - "9042:9042"
    volumes:
      - scylla_data:/var/lib/scylla
    command: --developer-mode 1 --smp 2
    environment:
      - SCYLLA_CLUSTER_NAME=MemoAppCluster
      - SCYLLA_KEYSPACE=memo_app
    networks:
      - memo-network

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - memo-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - memo-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - memo-network

volumes:
  frontend_node_modules:
  backend_cache:
  cargo_registry:
  scylla_data:
  redis_data:
  elasticsearch_data:

networks:
  memo-network:
    driver: bridge